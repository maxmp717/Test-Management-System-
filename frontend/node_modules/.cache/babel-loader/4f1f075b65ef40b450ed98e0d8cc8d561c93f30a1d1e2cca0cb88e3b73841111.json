{"ast":null,"code":"import _objectSpread from\"C:/Users/Sriram/Documents/mani/Test-Management-System-/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./App.css';// API service using fetch\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL='http://localhost:5000/api';const apiRequest=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(API_BASE_URL).concat(endpoint);const token=localStorage.getItem('token');const defaultOptions={headers:_objectSpread(_objectSpread({'Content-Type':'application/json'},token&&{'Authorization':\"Bearer \".concat(token)}),options.headers)};const config=_objectSpread(_objectSpread(_objectSpread({},defaultOptions),options),{},{headers:_objectSpread(_objectSpread({},defaultOptions.headers),options.headers)});const response=await fetch(url,config);if(!response.ok){const errorData=await response.json().catch(()=>({message:'Request failed'}));throw new Error(errorData.message||\"HTTP \".concat(response.status));}return response.json();};// Auth service\nconst authService={login:async(email,password)=>{return apiRequest('/auth/login',{method:'POST',body:JSON.stringify({email,password})});},register:async(email,password,name)=>{return apiRequest('/auth/register',{method:'POST',body:JSON.stringify({email,password,name})});},logout:()=>{localStorage.removeItem('token');localStorage.removeItem('admin');},getToken:()=>localStorage.getItem('token'),getAdmin:()=>{const admin=localStorage.getItem('admin');return admin?JSON.parse(admin):null;},setAuth:(token,admin)=>{localStorage.setItem('token',token);localStorage.setItem('admin',JSON.stringify(admin));}};// Test service\nconst testService={getAll:async()=>{const response=await apiRequest('/tests');return response.tests;},create:async(title,description)=>{return apiRequest('/tests',{method:'POST',body:JSON.stringify({title,description})});},addQuestion:async(testId,questionData)=>{return apiRequest(\"/tests/\".concat(testId,\"/questions\"),{method:'POST',body:JSON.stringify(questionData)});},deleteQuestion:async(testId,questionId)=>{return apiRequest(\"/tests/\".concat(testId,\"/questions/\").concat(questionId),{method:'DELETE'});},uploadCSV:async(testId,file)=>{const formData=new FormData();formData.append('csvFile',file);const token=localStorage.getItem('token');const response=await fetch(\"\".concat(API_BASE_URL,\"/tests/\").concat(testId,\"/upload-csv\"),{method:'POST',headers:_objectSpread({},token&&{'Authorization':\"Bearer \".concat(token)}),body:formData});if(!response.ok){const errorData=await response.json().catch(()=>({message:'Upload failed'}));throw new Error(errorData.message||\"HTTP \".concat(response.status));}return response.json();},delete:async testId=>{return apiRequest(\"/tests/\".concat(testId),{method:'DELETE'});}};// Login Component\nconst Login=_ref=>{let{onLogin}=_ref;const[formData,setFormData]=useState({email:'',password:''});const[isRegistering,setIsRegistering]=useState(false);const[name,setName]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError('');try{let result;if(isRegistering){result=await authService.register(formData.email,formData.password,name);}else{result=await authService.login(formData.email,formData.password);}authService.setAuth(result.token,result.admin);onLogin(result.admin);}catch(error){setError(error.message||'Authentication failed');}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"login-title\",children:\"Test Management System\"}),/*#__PURE__*/_jsx(\"p\",{className:\"login-subtitle\",children:isRegistering?'Create Admin Account':'Admin Login'})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"login-form\",children:[isRegistering&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:e=>setName(e.target.value),className:\"form-input\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:formData.email,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{email:e.target.value})),className:\"form-input\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:formData.password,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{password:e.target.value})),className:\"form-input\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"login-button \".concat(loading?'loading':''),children:loading?'Processing...':isRegistering?'Register':'Login'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"login-toggle\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsRegistering(!isRegistering),className:\"toggle-button\",children:isRegistering?'Already have an account? Login':'Need an account? Register'})})]})});};// Create Test Modal\nconst CreateTestModal=_ref2=>{let{isOpen,onClose,onSubmit}=_ref2;const[formData,setFormData]=useState({title:'',description:''});const handleSubmit=e=>{e.preventDefault();onSubmit(formData);setFormData({title:'',description:''});};if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"modal-title\",children:\"Create New Test\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"modal-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Test Title *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.title,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{title:e.target.value})),className:\"form-input\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Description (Optional)\"}),/*#__PURE__*/_jsx(\"textarea\",{value:formData.description,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{description:e.target.value})),className:\"form-textarea\",rows:\"3\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Create Test\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,className:\"btn btn-secondary\",children:\"Cancel\"})]})]})]})});};// Add Question Modal\nconst AddQuestionModal=_ref3=>{let{isOpen,onClose,onSubmit}=_ref3;const[formData,setFormData]=useState({questionText:'',optionA:'',optionB:'',optionC:'',optionD:'',correctAnswer:'A'});const handleSubmit=e=>{e.preventDefault();onSubmit(formData);setFormData({questionText:'',optionA:'',optionB:'',optionC:'',optionD:'',correctAnswer:'A'});};if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content large\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"modal-title\",children:\"Add Question\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"modal-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Question Text *\"}),/*#__PURE__*/_jsx(\"textarea\",{value:formData.questionText,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{questionText:e.target.value})),className:\"form-textarea\",rows:\"3\",required:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"options-grid\",children:['A','B','C','D'].map(option=>/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label\",children:[\"Option \",option,\" *\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData[\"option\".concat(option)],onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{[\"option\".concat(option)]:e.target.value})),className:\"form-input\",required:true})]},option))}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Correct Answer *\"}),/*#__PURE__*/_jsxs(\"select\",{value:formData.correctAnswer,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{correctAnswer:e.target.value})),className:\"form-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"A\",children:\"A\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B\",children:\"B\"}),/*#__PURE__*/_jsx(\"option\",{value:\"C\",children:\"C\"}),/*#__PURE__*/_jsx(\"option\",{value:\"D\",children:\"D\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-success\",children:\"Add Question\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,className:\"btn btn-secondary\",children:\"Cancel\"})]})]})]})});};// CSV Upload Modal\nconst CSVUploadModal=_ref4=>{let{isOpen,onClose,onUpload,testId}=_ref4;const[file,setFile]=useState(null);const[uploading,setUploading]=useState(false);const handleSubmit=async e=>{e.preventDefault();if(!file)return;setUploading(true);try{await onUpload(testId,file);setFile(null);}finally{setUploading(false);}};if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"modal-title\",children:\"Upload Questions CSV\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"csv-format-info\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"info-title\",children:\"CSV Format:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"questionText,option1,option2,option3,option4,correctAnswer\"}),/*#__PURE__*/_jsx(\"p\",{className:\"info-example\",children:\"Example: \\\"What is 2+2?,1,2,3,4,4\\\"\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"modal-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Select CSV File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:e=>setFile(e.target.files[0]),className:\"form-file\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!file||uploading,className:\"btn btn-primary \".concat(!file||uploading?'disabled':''),children:uploading?'Uploading...':'Upload'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,className:\"btn btn-secondary\",children:\"Cancel\"})]})]})]})});};// Test Item Component\nconst TestItem=_ref5=>{let{test,onAddQuestion,onUploadCSV,onDeleteQuestion,onDeleteTest}=_ref5;const[isExpanded,setIsExpanded]=useState(false);return/*#__PURE__*/_jsxs(\"div\",{className:\"test-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-header\",onClick:()=>setIsExpanded(!isExpanded),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"test-info\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"test-title\",children:test.title}),test.description&&/*#__PURE__*/_jsx(\"p\",{className:\"test-description\",children:test.description}),/*#__PURE__*/_jsxs(\"p\",{className:\"test-meta\",children:[test.questions.length,\" questions\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"test-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();onAddQuestion(test._id);},className:\"btn btn-success small\",children:\"Add Question\"}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();onUploadCSV(test._id);},className:\"btn btn-primary small\",children:\"Upload CSV\"}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();if(window.confirm('Are you sure you want to delete this test?')){onDeleteTest(test._id);}},className:\"btn btn-danger small\",children:\"Delete\"}),/*#__PURE__*/_jsx(\"span\",{className:\"expand-icon \".concat(isExpanded?'expanded':''),children:\"\\u25BC\"})]})]}),isExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"test-questions\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"questions-container\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"questions-title\",children:\"Questions:\"}),test.questions.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-questions\",children:\"No questions added yet.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"questions-list\",children:test.questions.map((question,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"question-item\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"question-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-text-container\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"question-text\",children:[index+1,\". \",question.questionText]}),/*#__PURE__*/_jsx(\"div\",{className:\"options-container\",children:Object.entries(question.options).map(_ref6=>{let[key,value]=_ref6;return/*#__PURE__*/_jsxs(\"div\",{className:\"option \".concat(question.correctAnswer===key?'correct':''),children:[key,\". \",value]},key);})}),/*#__PURE__*/_jsxs(\"p\",{className:\"correct-answer\",children:[\"Correct Answer: \",question.correctAnswer]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(window.confirm('Are you sure you want to delete this question?')){onDeleteQuestion(test._id,question._id);}},className:\"btn btn-danger small\",children:\"Delete\"})]})},question._id))})]})})]});};// Main Dashboard Component\nconst Dashboard=_ref7=>{let{admin,onLogout}=_ref7;const[tests,setTests]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[success,setSuccess]=useState('');// Modal states\nconst[showCreateTest,setShowCreateTest]=useState(false);const[showAddQuestion,setShowAddQuestion]=useState(false);const[showCSVUpload,setShowCSVUpload]=useState(false);const[selectedTestId,setSelectedTestId]=useState(null);useEffect(()=>{loadTests();},[]);const loadTests=async()=>{try{setLoading(true);const testsData=await testService.getAll();setTests(testsData);}catch(error){setError('Failed to load tests: '+error.message);}finally{setLoading(false);}};const showMessage=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'success';if(type==='success'){setSuccess(message);setError('');}else{setError(message);setSuccess('');}setTimeout(()=>{setSuccess('');setError('');},5000);};const handleCreateTest=async testData=>{try{await testService.create(testData.title,testData.description);setShowCreateTest(false);loadTests();showMessage('Test created successfully!');}catch(error){showMessage('Failed to create test: '+error.message,'error');}};const handleAddQuestion=async questionData=>{try{await testService.addQuestion(selectedTestId,questionData);setShowAddQuestion(false);setSelectedTestId(null);loadTests();showMessage('Question added successfully!');}catch(error){showMessage('Failed to add question: '+error.message,'error');}};const handleDeleteQuestion=async(testId,questionId)=>{try{await testService.deleteQuestion(testId,questionId);loadTests();showMessage('Question deleted successfully!');}catch(error){showMessage('Failed to delete question: '+error.message,'error');}};const handleDeleteTest=async testId=>{try{await testService.delete(testId);loadTests();showMessage('Test deleted successfully!');}catch(error){showMessage('Failed to delete test: '+error.message,'error');}};const handleCSVUpload=async(testId,file)=>{try{const result=await testService.uploadCSV(testId,file);setShowCSVUpload(false);setSelectedTestId(null);loadTests();showMessage(result.message);}catch(error){showMessage('Failed to upload CSV: '+error.message,'error');}};const openAddQuestion=testId=>{setSelectedTestId(testId);setShowAddQuestion(true);};const openCSVUpload=testId=>{setSelectedTestId(testId);setShowCSVUpload(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-info\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"dashboard-title\",children:\"Test Management System\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"dashboard-subtitle\",children:[\"Welcome back, \",admin.name]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowCreateTest(true),className:\"btn btn-primary\",children:\"Create Test\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onLogout,className:\"btn btn-secondary\",children:\"Logout\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[success&&/*#__PURE__*/_jsx(\"div\",{className:\"message success\",children:success}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"message error\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"tests-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Your Tests\"}),/*#__PURE__*/_jsx(\"p\",{className:\"section-subtitle\",children:\"Manage your tests and questions\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"section-content\",children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{className:\"loading-text\",children:\"Loading tests...\"})]}):tests.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"empty-message\",children:\"No tests created yet.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowCreateTest(true),className:\"btn btn-primary\",children:\"Create Your First Test\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"tests-grid\",children:tests.map(test=>/*#__PURE__*/_jsx(TestItem,{test:test,onAddQuestion:openAddQuestion,onUploadCSV:openCSVUpload,onDeleteQuestion:handleDeleteQuestion,onDeleteTest:handleDeleteTest},test._id))})})]})]}),/*#__PURE__*/_jsx(CreateTestModal,{isOpen:showCreateTest,onClose:()=>setShowCreateTest(false),onSubmit:handleCreateTest}),/*#__PURE__*/_jsx(AddQuestionModal,{isOpen:showAddQuestion,onClose:()=>{setShowAddQuestion(false);setSelectedTestId(null);},onSubmit:handleAddQuestion}),/*#__PURE__*/_jsx(CSVUploadModal,{isOpen:showCSVUpload,onClose:()=>{setShowCSVUpload(false);setSelectedTestId(null);},onUpload:handleCSVUpload,testId:selectedTestId})]});};// Main App Component\nconst App=()=>{const[isAuthenticated,setIsAuthenticated]=useState(false);const[admin,setAdmin]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check if user is already logged in\nconst token=authService.getToken();const savedAdmin=authService.getAdmin();if(token&&savedAdmin){setIsAuthenticated(true);setAdmin(savedAdmin);}setLoading(false);},[]);const handleLogin=adminData=>{setIsAuthenticated(true);setAdmin(adminData);};const handleLogout=()=>{authService.logout();setIsAuthenticated(false);setAdmin(null);};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"app-loading\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner large\"}),/*#__PURE__*/_jsx(\"p\",{className:\"loading-text\",children:\"Loading...\"})]})});}return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:isAuthenticated?/*#__PURE__*/_jsx(Dashboard,{admin:admin,onLogout:handleLogout}):/*#__PURE__*/_jsx(Login,{onLogin:handleLogin})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","apiRequest","endpoint","options","arguments","length","undefined","url","concat","token","localStorage","getItem","defaultOptions","headers","_objectSpread","config","response","fetch","ok","errorData","json","catch","message","Error","status","authService","login","email","password","method","body","JSON","stringify","register","name","logout","removeItem","getToken","getAdmin","admin","parse","setAuth","setItem","testService","getAll","tests","create","title","description","addQuestion","testId","questionData","deleteQuestion","questionId","uploadCSV","file","formData","FormData","append","delete","Login","_ref","onLogin","setFormData","isRegistering","setIsRegistering","setName","loading","setLoading","error","setError","handleSubmit","e","preventDefault","result","className","children","onSubmit","type","value","onChange","target","required","disabled","onClick","CreateTestModal","_ref2","isOpen","onClose","rows","AddQuestionModal","_ref3","questionText","optionA","optionB","optionC","optionD","correctAnswer","map","option","CSVUploadModal","_ref4","onUpload","setFile","uploading","setUploading","accept","files","TestItem","_ref5","test","onAddQuestion","onUploadCSV","onDeleteQuestion","onDeleteTest","isExpanded","setIsExpanded","questions","stopPropagation","_id","window","confirm","question","index","Object","entries","_ref6","key","Dashboard","_ref7","onLogout","setTests","success","setSuccess","showCreateTest","setShowCreateTest","showAddQuestion","setShowAddQuestion","showCSVUpload","setShowCSVUpload","selectedTestId","setSelectedTestId","loadTests","testsData","showMessage","setTimeout","handleCreateTest","testData","handleAddQuestion","handleDeleteQuestion","handleDeleteTest","handleCSVUpload","openAddQuestion","openCSVUpload","App","isAuthenticated","setIsAuthenticated","setAdmin","savedAdmin","handleLogin","adminData","handleLogout"],"sources":["C:/Users/Sriram/Documents/mani/Test-Management-System-/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\n// API service using fetch\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst apiRequest = async (endpoint, options = {}) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const defaultOptions = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...(token && { 'Authorization': `Bearer ${token}` }),\r\n      ...options.headers\r\n    }\r\n  };\r\n\r\n  const config = {\r\n    ...defaultOptions,\r\n    ...options,\r\n    headers: {\r\n      ...defaultOptions.headers,\r\n      ...options.headers\r\n    }\r\n  };\r\n\r\n  const response = await fetch(url, config);\r\n  \r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({ message: 'Request failed' }));\r\n    throw new Error(errorData.message || `HTTP ${response.status}`);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Auth service\r\nconst authService = {\r\n  login: async (email, password) => {\r\n    return apiRequest('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n  },\r\n  \r\n  register: async (email, password, name) => {\r\n    return apiRequest('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password, name })\r\n    });\r\n  },\r\n  \r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('admin');\r\n  },\r\n  \r\n  getToken: () => localStorage.getItem('token'),\r\n  \r\n  getAdmin: () => {\r\n    const admin = localStorage.getItem('admin');\r\n    return admin ? JSON.parse(admin) : null;\r\n  },\r\n  \r\n  setAuth: (token, admin) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('admin', JSON.stringify(admin));\r\n  }\r\n};\r\n\r\n// Test service\r\nconst testService = {\r\n  getAll: async () => {\r\n    const response = await apiRequest('/tests');\r\n    return response.tests;\r\n  },\r\n  \r\n  create: async (title, description) => {\r\n    return apiRequest('/tests', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ title, description })\r\n    });\r\n  },\r\n  \r\n  addQuestion: async (testId, questionData) => {\r\n    return apiRequest(`/tests/${testId}/questions`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(questionData)\r\n    });\r\n  },\r\n  \r\n  deleteQuestion: async (testId, questionId) => {\r\n    return apiRequest(`/tests/${testId}/questions/${questionId}`, {\r\n      method: 'DELETE'\r\n    });\r\n  },\r\n  \r\n  uploadCSV: async (testId, file) => {\r\n    const formData = new FormData();\r\n    formData.append('csvFile', file);\r\n    \r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_BASE_URL}/tests/${testId}/upload-csv`, {\r\n      method: 'POST',\r\n      headers: {\r\n        ...(token && { 'Authorization': `Bearer ${token}` })\r\n      },\r\n      body: formData\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({ message: 'Upload failed' }));\r\n      throw new Error(errorData.message || `HTTP ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n  },\r\n  \r\n  delete: async (testId) => {\r\n    return apiRequest(`/tests/${testId}`, {\r\n      method: 'DELETE'\r\n    });\r\n  }\r\n};\r\n\r\n// Login Component\r\nconst Login = ({ onLogin }) => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      let result;\r\n      if (isRegistering) {\r\n        result = await authService.register(formData.email, formData.password, name);\r\n      } else {\r\n        result = await authService.login(formData.email, formData.password);\r\n      }\r\n\r\n      authService.setAuth(result.token, result.admin);\r\n      onLogin(result.admin);\r\n    } catch (error) {\r\n      setError(error.message || 'Authentication failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <div className=\"login-header\">\r\n          <h1 className=\"login-title\">\r\n            Test Management System\r\n          </h1>\r\n          <p className=\"login-subtitle\">\r\n            {isRegistering ? 'Create Admin Account' : 'Admin Login'}\r\n          </p>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          {isRegistering && (\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                className=\"form-input\"\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n              className=\"form-input\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              value={formData.password}\r\n              onChange={(e) => setFormData({...formData, password: e.target.value})}\r\n              className=\"form-input\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className={`login-button ${loading ? 'loading' : ''}`}\r\n          >\r\n            {loading ? 'Processing...' : (isRegistering ? 'Register' : 'Login')}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"login-toggle\">\r\n          <button\r\n            onClick={() => setIsRegistering(!isRegistering)}\r\n            className=\"toggle-button\"\r\n          >\r\n            {isRegistering ? 'Already have an account? Login' : 'Need an account? Register'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Create Test Modal\r\nconst CreateTestModal = ({ isOpen, onClose, onSubmit }) => {\r\n  const [formData, setFormData] = useState({ title: '', description: '' });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n    setFormData({ title: '', description: '' });\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2 className=\"modal-title\">Create New Test</h2>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Test Title *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => setFormData({...formData, title: e.target.value})}\r\n              className=\"form-input\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Description (Optional)\r\n            </label>\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n              className=\"form-textarea\"\r\n              rows=\"3\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"modal-buttons\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Create Test\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Add Question Modal\r\nconst AddQuestionModal = ({ isOpen, onClose, onSubmit }) => {\r\n  const [formData, setFormData] = useState({\r\n    questionText: '',\r\n    optionA: '',\r\n    optionB: '',\r\n    optionC: '',\r\n    optionD: '',\r\n    correctAnswer: 'A'\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n    setFormData({\r\n      questionText: '',\r\n      optionA: '',\r\n      optionB: '',\r\n      optionC: '',\r\n      optionD: '',\r\n      correctAnswer: 'A'\r\n    });\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content large\">\r\n        <h2 className=\"modal-title\">Add Question</h2>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Question Text *\r\n            </label>\r\n            <textarea\r\n              value={formData.questionText}\r\n              onChange={(e) => setFormData({...formData, questionText: e.target.value})}\r\n              className=\"form-textarea\"\r\n              rows=\"3\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"options-grid\">\r\n            {['A', 'B', 'C', 'D'].map(option => (\r\n              <div key={option} className=\"form-group\">\r\n                <label className=\"form-label\">\r\n                  Option {option} *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData[`option${option}`]}\r\n                  onChange={(e) => setFormData({...formData, [`option${option}`]: e.target.value})}\r\n                  className=\"form-input\"\r\n                  required\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Correct Answer *\r\n            </label>\r\n            <select\r\n              value={formData.correctAnswer}\r\n              onChange={(e) => setFormData({...formData, correctAnswer: e.target.value})}\r\n              className=\"form-select\"\r\n            >\r\n              <option value=\"A\">A</option>\r\n              <option value=\"B\">B</option>\r\n              <option value=\"C\">C</option>\r\n              <option value=\"D\">D</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"modal-buttons\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success\"\r\n            >\r\n              Add Question\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// CSV Upload Modal\r\nconst CSVUploadModal = ({ isOpen, onClose, onUpload, testId }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) return;\r\n    \r\n    setUploading(true);\r\n    try {\r\n      await onUpload(testId, file);\r\n      setFile(null);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2 className=\"modal-title\">Upload Questions CSV</h2>\r\n        \r\n        <div className=\"csv-format-info\">\r\n          <h3 className=\"info-title\">CSV Format:</h3>\r\n          <p className=\"info-text\">\r\n            questionText,option1,option2,option3,option4,correctAnswer\r\n          </p>\r\n          <p className=\"info-example\">\r\n            Example: \"What is 2+2?,1,2,3,4,4\"\r\n          </p>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Select CSV File\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv\"\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n              className=\"form-file\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"modal-buttons\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!file || uploading}\r\n              className={`btn btn-primary ${(!file || uploading) ? 'disabled' : ''}`}\r\n            >\r\n              {uploading ? 'Uploading...' : 'Upload'}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Test Item Component\r\nconst TestItem = ({ test, onAddQuestion, onUploadCSV, onDeleteQuestion, onDeleteTest }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  return (\r\n    <div className=\"test-item\">\r\n      <div \r\n        className=\"test-header\"\r\n        onClick={() => setIsExpanded(!isExpanded)}\r\n      >\r\n        <div className=\"test-info\">\r\n          <h3 className=\"test-title\">{test.title}</h3>\r\n          {test.description && (\r\n            <p className=\"test-description\">{test.description}</p>\r\n          )}\r\n          <p className=\"test-meta\">\r\n            {test.questions.length} questions\r\n          </p>\r\n        </div>\r\n        <div className=\"test-actions\">\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onAddQuestion(test._id);\r\n            }}\r\n            className=\"btn btn-success small\"\r\n          >\r\n            Add Question\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onUploadCSV(test._id);\r\n            }}\r\n            className=\"btn btn-primary small\"\r\n          >\r\n            Upload CSV\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              if (window.confirm('Are you sure you want to delete this test?')) {\r\n                onDeleteTest(test._id);\r\n              }\r\n            }}\r\n            className=\"btn btn-danger small\"\r\n          >\r\n            Delete\r\n          </button>\r\n          <span className={`expand-icon ${isExpanded ? 'expanded' : ''}`}>\r\n            ▼\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      {isExpanded && (\r\n        <div className=\"test-questions\">\r\n          <div className=\"questions-container\">\r\n            <h4 className=\"questions-title\">Questions:</h4>\r\n            {test.questions.length === 0 ? (\r\n              <p className=\"no-questions\">No questions added yet.</p>\r\n            ) : (\r\n              <div className=\"questions-list\">\r\n                {test.questions.map((question, index) => (\r\n                  <div key={question._id} className=\"question-item\">\r\n                    <div className=\"question-content\">\r\n                      <div className=\"question-text-container\">\r\n                        <p className=\"question-text\">\r\n                          {index + 1}. {question.questionText}\r\n                        </p>\r\n                        <div className=\"options-container\">\r\n                          {Object.entries(question.options).map(([key, value]) => (\r\n                            <div\r\n                              key={key}\r\n                              className={`option ${\r\n                                question.correctAnswer === key \r\n                                  ? 'correct' \r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {key}. {value}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <p className=\"correct-answer\">\r\n                          Correct Answer: {question.correctAnswer}\r\n                        </p>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => {\r\n                          if (window.confirm('Are you sure you want to delete this question?')) {\r\n                            onDeleteQuestion(test._id, question._id);\r\n                          }\r\n                        }}\r\n                        className=\"btn btn-danger small\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Dashboard Component\r\nconst Dashboard = ({ admin, onLogout }) => {\r\n  const [tests, setTests] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  \r\n  // Modal states\r\n  const [showCreateTest, setShowCreateTest] = useState(false);\r\n  const [showAddQuestion, setShowAddQuestion] = useState(false);\r\n  const [showCSVUpload, setShowCSVUpload] = useState(false);\r\n  const [selectedTestId, setSelectedTestId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadTests();\r\n  }, []);\r\n\r\n  const loadTests = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const testsData = await testService.getAll();\r\n      setTests(testsData);\r\n    } catch (error) {\r\n      setError('Failed to load tests: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const showMessage = (message, type = 'success') => {\r\n    if (type === 'success') {\r\n      setSuccess(message);\r\n      setError('');\r\n    } else {\r\n      setError(message);\r\n      setSuccess('');\r\n    }\r\n    setTimeout(() => {\r\n      setSuccess('');\r\n      setError('');\r\n    }, 5000);\r\n  };\r\n\r\n  const handleCreateTest = async (testData) => {\r\n    try {\r\n      await testService.create(testData.title, testData.description);\r\n      setShowCreateTest(false);\r\n      loadTests();\r\n      showMessage('Test created successfully!');\r\n    } catch (error) {\r\n      showMessage('Failed to create test: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleAddQuestion = async (questionData) => {\r\n    try {\r\n      await testService.addQuestion(selectedTestId, questionData);\r\n      setShowAddQuestion(false);\r\n      setSelectedTestId(null);\r\n      loadTests();\r\n      showMessage('Question added successfully!');\r\n    } catch (error) {\r\n      showMessage('Failed to add question: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeleteQuestion = async (testId, questionId) => {\r\n    try {\r\n      await testService.deleteQuestion(testId, questionId);\r\n      loadTests();\r\n      showMessage('Question deleted successfully!');\r\n    } catch (error) {\r\n      showMessage('Failed to delete question: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeleteTest = async (testId) => {\r\n    try {\r\n      await testService.delete(testId);\r\n      loadTests();\r\n      showMessage('Test deleted successfully!');\r\n    } catch (error) {\r\n      showMessage('Failed to delete test: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleCSVUpload = async (testId, file) => {\r\n    try {\r\n      const result = await testService.uploadCSV(testId, file);\r\n      setShowCSVUpload(false);\r\n      setSelectedTestId(null);\r\n      loadTests();\r\n      showMessage(result.message);\r\n    } catch (error) {\r\n      showMessage('Failed to upload CSV: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const openAddQuestion = (testId) => {\r\n    setSelectedTestId(testId);\r\n    setShowAddQuestion(true);\r\n  };\r\n\r\n  const openCSVUpload = (testId) => {\r\n    setSelectedTestId(testId);\r\n    setShowCSVUpload(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Header */}\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"header-info\">\r\n            <h1 className=\"dashboard-title\">\r\n              Test Management System\r\n            </h1>\r\n            <p className=\"dashboard-subtitle\">Welcome back, {admin.name}</p>\r\n          </div>\r\n          <div className=\"header-actions\">\r\n            <button\r\n              onClick={() => setShowCreateTest(true)}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Create Test\r\n            </button>\r\n            <button\r\n              onClick={onLogout}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"dashboard-content\">\r\n        \r\n        {/* Messages */}\r\n        {success && (\r\n          <div className=\"message success\">\r\n            {success}\r\n          </div>\r\n        )}\r\n        \r\n        {error && (\r\n          <div className=\"message error\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Tests List */}\r\n        <div className=\"tests-section\">\r\n          <div className=\"section-header\">\r\n            <h2 className=\"section-title\">Your Tests</h2>\r\n            <p className=\"section-subtitle\">Manage your tests and questions</p>\r\n          </div>\r\n          \r\n          <div className=\"section-content\">\r\n            {loading ? (\r\n              <div className=\"loading-container\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <p className=\"loading-text\">Loading tests...</p>\r\n              </div>\r\n            ) : tests.length === 0 ? (\r\n              <div className=\"empty-state\">\r\n                <p className=\"empty-message\">No tests created yet.</p>\r\n                <button\r\n                  onClick={() => setShowCreateTest(true)}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Create Your First Test\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"tests-grid\">\r\n                {tests.map(test => (\r\n                  <TestItem\r\n                    key={test._id}\r\n                    test={test}\r\n                    onAddQuestion={openAddQuestion}\r\n                    onUploadCSV={openCSVUpload}\r\n                    onDeleteQuestion={handleDeleteQuestion}\r\n                    onDeleteTest={handleDeleteTest}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      <CreateTestModal\r\n        isOpen={showCreateTest}\r\n        onClose={() => setShowCreateTest(false)}\r\n        onSubmit={handleCreateTest}\r\n      />\r\n      \r\n      <AddQuestionModal\r\n        isOpen={showAddQuestion}\r\n        onClose={() => {\r\n          setShowAddQuestion(false);\r\n          setSelectedTestId(null);\r\n        }}\r\n        onSubmit={handleAddQuestion}\r\n      />\r\n      \r\n      <CSVUploadModal\r\n        isOpen={showCSVUpload}\r\n        onClose={() => {\r\n          setShowCSVUpload(false);\r\n          setSelectedTestId(null);\r\n        }}\r\n        onUpload={handleCSVUpload}\r\n        testId={selectedTestId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main App Component\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [admin, setAdmin] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = authService.getToken();\r\n    const savedAdmin = authService.getAdmin();\r\n    \r\n    if (token && savedAdmin) {\r\n      setIsAuthenticated(true);\r\n      setAdmin(savedAdmin);\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const handleLogin = (adminData) => {\r\n    setIsAuthenticated(true);\r\n    setAdmin(adminData);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    authService.logout();\r\n    setIsAuthenticated(false);\r\n    setAdmin(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"app-loading\">\r\n        <div className=\"loading-content\">\r\n          <div className=\"loading-spinner large\"></div>\r\n          <p className=\"loading-text\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isAuthenticated ? (\r\n        <Dashboard admin={admin} onLogout={handleLogout} />\r\n      ) : (\r\n        <Login onLogin={handleLogin} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}