{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sriram\\\\Documents\\\\mani\\\\Test-Management-System-\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// API service using fetch\n// const API_BASE_URL = 'http://localhost:5000/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = '/api';\nconst apiRequest = async (endpoint, options = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const token = localStorage.getItem('token');\n  const defaultOptions = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...(token && {\n        'Authorization': `Bearer ${token}`\n      }),\n      ...options.headers\n    }\n  };\n  const config = {\n    ...defaultOptions,\n    ...options,\n    headers: {\n      ...defaultOptions.headers,\n      ...options.headers\n    }\n  };\n  const response = await fetch(url, config);\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({\n      message: 'Request failed'\n    }));\n    throw new Error(errorData.message || `HTTP ${response.status}`);\n  }\n  return response.json();\n};\n\n// Auth service\nconst authService = {\n  login: async (email, password) => {\n    return apiRequest('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n  },\n  register: async (email, password, name) => {\n    return apiRequest('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      })\n    });\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('admin');\n  },\n  getToken: () => localStorage.getItem('token'),\n  getAdmin: () => {\n    const admin = localStorage.getItem('admin');\n    return admin ? JSON.parse(admin) : null;\n  },\n  setAuth: (token, admin) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('admin', JSON.stringify(admin));\n  }\n};\n\n// Test service\nconst testService = {\n  getAll: async () => {\n    const response = await apiRequest('/tests');\n    return response.tests;\n  },\n  create: async (title, description) => {\n    return apiRequest('/tests', {\n      method: 'POST',\n      body: JSON.stringify({\n        title,\n        description\n      })\n    });\n  },\n  addQuestion: async (testId, questionData) => {\n    return apiRequest(`/tests/${testId}/questions`, {\n      method: 'POST',\n      body: JSON.stringify(questionData)\n    });\n  },\n  deleteQuestion: async (testId, questionId) => {\n    return apiRequest(`/tests/${testId}/questions/${questionId}`, {\n      method: 'DELETE'\n    });\n  },\n  uploadCSV: async (testId, file) => {\n    const formData = new FormData();\n    formData.append('csvFile', file);\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${API_BASE_URL}/tests/${testId}/upload-csv`, {\n      method: 'POST',\n      headers: {\n        ...(token && {\n          'Authorization': `Bearer ${token}`\n        })\n      },\n      body: formData\n    });\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({\n        message: 'Upload failed'\n      }));\n      throw new Error(errorData.message || `HTTP ${response.status}`);\n    }\n    return response.json();\n  },\n  delete: async testId => {\n    return apiRequest(`/tests/${testId}`, {\n      method: 'DELETE'\n    });\n  }\n};\n\n// Login Component\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      let result;\n      if (isRegistering) {\n        result = await authService.register(formData.email, formData.password, name);\n      } else {\n        result = await authService.login(formData.email, formData.password);\n      }\n      authService.setAuth(result.token, result.admin);\n      onLogin(result.admin);\n    } catch (error) {\n      setError(error.message || 'Authentication failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"login-title\",\n          children: \"Test Management System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-subtitle\",\n          children: isRegistering ? 'Create Admin Account' : 'Admin Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [isRegistering && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: formData.email,\n            onChange: e => setFormData({\n              ...formData,\n              email: e.target.value\n            }),\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: formData.password,\n            onChange: e => setFormData({\n              ...formData,\n              password: e.target.value\n            }),\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: `login-button ${loading ? 'loading' : ''}`,\n          children: loading ? 'Processing...' : isRegistering ? 'Register' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRegistering(!isRegistering),\n          className: \"toggle-button\",\n          children: isRegistering ? 'Already have an account? Login' : 'Need an account? Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n// Create Test Modal\n_s(Login, \"HfMboJD3zQz1GZhbEw7TxdDAgio=\");\n_c = Login;\nconst CreateTestModal = ({\n  isOpen,\n  onClose,\n  onSubmit\n}) => {\n  _s2();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: ''\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(formData);\n    setFormData({\n      title: '',\n      description: ''\n    });\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal-title\",\n        children: \"Create New Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"modal-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Test Title *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData({\n              ...formData,\n              title: e.target.value\n            }),\n            className: \"form-input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Description (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.description,\n            onChange: e => setFormData({\n              ...formData,\n              description: e.target.value\n            }),\n            className: \"form-textarea\",\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Create Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"btn btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n\n// Add Question Modal\n_s2(CreateTestModal, \"n8tL5V2YKoP7Ymo9l2yI+GM7aI0=\");\n_c2 = CreateTestModal;\nconst AddQuestionModal = ({\n  isOpen,\n  onClose,\n  onSubmit\n}) => {\n  _s3();\n  const [formData, setFormData] = useState({\n    questionText: '',\n    optionA: '',\n    optionB: '',\n    optionC: '',\n    optionD: '',\n    correctAnswer: 'A'\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(formData);\n    setFormData({\n      questionText: '',\n      optionA: '',\n      optionB: '',\n      optionC: '',\n      optionD: '',\n      correctAnswer: 'A'\n    });\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content large\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal-title\",\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"modal-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Question Text *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.questionText,\n            onChange: e => setFormData({\n              ...formData,\n              questionText: e.target.value\n            }),\n            className: \"form-textarea\",\n            rows: \"3\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-grid\",\n          children: ['A', 'B', 'C', 'D'].map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"Option \", option, \" *\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData[`option${option}`],\n              onChange: e => setFormData({\n                ...formData,\n                [`option${option}`]: e.target.value\n              }),\n              className: \"form-input\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)]\n          }, option, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Correct Answer *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.correctAnswer,\n            onChange: e => setFormData({\n              ...formData,\n              correctAnswer: e.target.value\n            }),\n            className: \"form-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"A\",\n              children: \"A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"B\",\n              children: \"B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"C\",\n              children: \"C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"D\",\n              children: \"D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success\",\n            children: \"Add Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"btn btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n};\n\n// CSV Upload Modal\n_s3(AddQuestionModal, \"BEo9WBUXmqwAbbrUc/jNCi+IpXY=\");\n_c3 = AddQuestionModal;\nconst CSVUploadModal = ({\n  isOpen,\n  onClose,\n  onUpload,\n  testId\n}) => {\n  _s4();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) return;\n    setUploading(true);\n    try {\n      await onUpload(testId, file);\n      setFile(null);\n    } finally {\n      setUploading(false);\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"modal-title\",\n        children: \"Upload Questions CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"csv-format-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"info-title\",\n          children: \"CSV Format:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info-text\",\n          children: \"questionText,option1,option2,option3,option4,correctAnswer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info-example\",\n          children: \"Example: \\\"What is 2+2?,1,2,3,4,4\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"modal-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Select CSV File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: e => setFile(e.target.files[0]),\n            className: \"form-file\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !file || uploading,\n            className: `btn btn-primary ${!file || uploading ? 'disabled' : ''}`,\n            children: uploading ? 'Uploading...' : 'Upload'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"btn btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 5\n  }, this);\n};\n\n// Test Item Component\n_s4(CSVUploadModal, \"XzDh85CJXY53/nU7yS/Rq6ZjQAg=\");\n_c4 = CSVUploadModal;\nconst TestItem = ({\n  test,\n  onAddQuestion,\n  onUploadCSV,\n  onDeleteQuestion,\n  onDeleteTest\n}) => {\n  _s5();\n  const [isExpanded, setIsExpanded] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-header\",\n      onClick: () => setIsExpanded(!isExpanded),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"test-title\",\n          children: test.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), test.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"test-description\",\n          children: test.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"test-meta\",\n          children: [test.questions.length, \" questions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            onAddQuestion(test._id);\n          },\n          className: \"btn btn-success small\",\n          children: \"Add Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            onUploadCSV(test._id);\n          },\n          className: \"btn btn-primary small\",\n          children: \"Upload CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            if (window.confirm('Are you sure you want to delete this test?')) {\n              onDeleteTest(test._id);\n            }\n          },\n          className: \"btn btn-danger small\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `expand-icon ${isExpanded ? 'expanded' : ''}`,\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-questions\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"questions-title\",\n          children: \"Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this), test.questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-questions\",\n          children: \"No questions added yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-list\",\n          children: test.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-text-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"question-text\",\n                  children: [index + 1, \". \", question.questionText]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"options-container\",\n                  children: Object.entries(question.options).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `option ${question.correctAnswer === key ? 'correct' : ''}`,\n                    children: [key, \". \", value]\n                  }, key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"correct-answer\",\n                  children: [\"Correct Answer: \", question.correctAnswer]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (window.confirm('Are you sure you want to delete this question?')) {\n                    onDeleteQuestion(test._id, question._id);\n                  }\n                },\n                className: \"btn btn-danger small\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 21\n            }, this)\n          }, question._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 478,\n    columnNumber: 5\n  }, this);\n};\n\n// Main Dashboard Component\n_s5(TestItem, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n_c5 = TestItem;\nconst Dashboard = ({\n  admin,\n  onLogout\n}) => {\n  _s6();\n  const [tests, setTests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Modal states\n  const [showCreateTest, setShowCreateTest] = useState(false);\n  const [showAddQuestion, setShowAddQuestion] = useState(false);\n  const [showCSVUpload, setShowCSVUpload] = useState(false);\n  const [selectedTestId, setSelectedTestId] = useState(null);\n  useEffect(() => {\n    loadTests();\n  }, []);\n  const loadTests = async () => {\n    try {\n      setLoading(true);\n      const testsData = await testService.getAll();\n      setTests(testsData);\n    } catch (error) {\n      setError('Failed to load tests: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const showMessage = (message, type = 'success') => {\n    if (type === 'success') {\n      setSuccess(message);\n      setError('');\n    } else {\n      setError(message);\n      setSuccess('');\n    }\n    setTimeout(() => {\n      setSuccess('');\n      setError('');\n    }, 5000);\n  };\n  const handleCreateTest = async testData => {\n    try {\n      await testService.create(testData.title, testData.description);\n      setShowCreateTest(false);\n      loadTests();\n      showMessage('Test created successfully!');\n    } catch (error) {\n      showMessage('Failed to create test: ' + error.message, 'error');\n    }\n  };\n  const handleAddQuestion = async questionData => {\n    try {\n      await testService.addQuestion(selectedTestId, questionData);\n      setShowAddQuestion(false);\n      setSelectedTestId(null);\n      loadTests();\n      showMessage('Question added successfully!');\n    } catch (error) {\n      showMessage('Failed to add question: ' + error.message, 'error');\n    }\n  };\n  const handleDeleteQuestion = async (testId, questionId) => {\n    try {\n      await testService.deleteQuestion(testId, questionId);\n      loadTests();\n      showMessage('Question deleted successfully!');\n    } catch (error) {\n      showMessage('Failed to delete question: ' + error.message, 'error');\n    }\n  };\n  const handleDeleteTest = async testId => {\n    try {\n      await testService.delete(testId);\n      loadTests();\n      showMessage('Test deleted successfully!');\n    } catch (error) {\n      showMessage('Failed to delete test: ' + error.message, 'error');\n    }\n  };\n  const handleCSVUpload = async (testId, file) => {\n    try {\n      const result = await testService.uploadCSV(testId, file);\n      setShowCSVUpload(false);\n      setSelectedTestId(null);\n      loadTests();\n      showMessage(result.message);\n    } catch (error) {\n      showMessage('Failed to upload CSV: ' + error.message, 'error');\n    }\n  };\n  const openAddQuestion = testId => {\n    setSelectedTestId(testId);\n    setShowAddQuestion(true);\n  };\n  const openCSVUpload = testId => {\n    setSelectedTestId(testId);\n    setShowCSVUpload(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"dashboard-title\",\n            children: \"Test Management System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dashboard-subtitle\",\n            children: [\"Welcome back, \", admin.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowCreateTest(true),\n            className: \"btn btn-primary\",\n            children: \"Create Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onLogout,\n            className: \"btn btn-secondary\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tests-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Your Tests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-subtitle\",\n            children: \"Manage your tests and questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-content\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"loading-text\",\n              children: \"Loading tests...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 15\n          }, this) : tests.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-message\",\n              children: \"No tests created yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCreateTest(true),\n              className: \"btn btn-primary\",\n              children: \"Create Your First Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tests-grid\",\n            children: tests.map(test => /*#__PURE__*/_jsxDEV(TestItem, {\n              test: test,\n              onAddQuestion: openAddQuestion,\n              onUploadCSV: openCSVUpload,\n              onDeleteQuestion: handleDeleteQuestion,\n              onDeleteTest: handleDeleteTest\n            }, test._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTestModal, {\n      isOpen: showCreateTest,\n      onClose: () => setShowCreateTest(false),\n      onSubmit: handleCreateTest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddQuestionModal, {\n      isOpen: showAddQuestion,\n      onClose: () => {\n        setShowAddQuestion(false);\n        setSelectedTestId(null);\n      },\n      onSubmit: handleAddQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSVUploadModal, {\n      isOpen: showCSVUpload,\n      onClose: () => {\n        setShowCSVUpload(false);\n        setSelectedTestId(null);\n      },\n      onUpload: handleCSVUpload,\n      testId: selectedTestId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 692,\n    columnNumber: 5\n  }, this);\n};\n\n// Main App Component\n_s6(Dashboard, \"EwgHMwzijpn6/chYSI+8elbPU9Y=\");\n_c6 = Dashboard;\nconst App = () => {\n  _s7();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [admin, setAdmin] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = authService.getToken();\n    const savedAdmin = authService.getAdmin();\n    if (token && savedAdmin) {\n      setIsAuthenticated(true);\n      setAdmin(savedAdmin);\n    }\n    setLoading(false);\n  }, []);\n  const handleLogin = adminData => {\n    setIsAuthenticated(true);\n    setAdmin(adminData);\n  };\n  const handleLogout = () => {\n    authService.logout();\n    setIsAuthenticated(false);\n    setAdmin(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-text\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isAuthenticated ? /*#__PURE__*/_jsxDEV(Dashboard, {\n      admin: admin,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 847,\n    columnNumber: 5\n  }, this);\n};\n_s7(App, \"FIui8k98dtYv6gQ3tSMBcjASx7I=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"CreateTestModal\");\n$RefreshReg$(_c3, \"AddQuestionModal\");\n$RefreshReg$(_c4, \"CSVUploadModal\");\n$RefreshReg$(_c5, \"TestItem\");\n$RefreshReg$(_c6, \"Dashboard\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_BASE_URL","apiRequest","endpoint","options","url","token","localStorage","getItem","defaultOptions","headers","config","response","fetch","ok","errorData","json","catch","message","Error","status","authService","login","email","password","method","body","JSON","stringify","register","name","logout","removeItem","getToken","getAdmin","admin","parse","setAuth","setItem","testService","getAll","tests","create","title","description","addQuestion","testId","questionData","deleteQuestion","questionId","uploadCSV","file","formData","FormData","append","delete","Login","onLogin","_s","setFormData","isRegistering","setIsRegistering","setName","loading","setLoading","error","setError","handleSubmit","e","preventDefault","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","disabled","onClick","_c","CreateTestModal","isOpen","onClose","_s2","rows","_c2","AddQuestionModal","_s3","questionText","optionA","optionB","optionC","optionD","correctAnswer","map","option","_c3","CSVUploadModal","onUpload","_s4","setFile","uploading","setUploading","accept","files","_c4","TestItem","test","onAddQuestion","onUploadCSV","onDeleteQuestion","onDeleteTest","_s5","isExpanded","setIsExpanded","questions","length","stopPropagation","_id","window","confirm","question","index","Object","entries","key","_c5","Dashboard","onLogout","_s6","setTests","success","setSuccess","showCreateTest","setShowCreateTest","showAddQuestion","setShowAddQuestion","showCSVUpload","setShowCSVUpload","selectedTestId","setSelectedTestId","loadTests","testsData","showMessage","setTimeout","handleCreateTest","testData","handleAddQuestion","handleDeleteQuestion","handleDeleteTest","handleCSVUpload","openAddQuestion","openCSVUpload","_c6","App","_s7","isAuthenticated","setIsAuthenticated","setAdmin","savedAdmin","handleLogin","adminData","handleLogout","_c7","$RefreshReg$"],"sources":["C:/Users/Sriram/Documents/mani/Test-Management-System-/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\n// API service using fetch\r\n// const API_BASE_URL = 'http://localhost:5000/api';\r\nconst API_BASE_URL = '/api';\r\nconst apiRequest = async (endpoint, options = {}) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const defaultOptions = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...(token && { 'Authorization': `Bearer ${token}` }),\r\n      ...options.headers\r\n    }\r\n  };\r\n\r\n  const config = {\r\n    ...defaultOptions,\r\n    ...options,\r\n    headers: {\r\n      ...defaultOptions.headers,\r\n      ...options.headers\r\n    }\r\n  };\r\n\r\n  const response = await fetch(url, config);\r\n  \r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({ message: 'Request failed' }));\r\n    throw new Error(errorData.message || `HTTP ${response.status}`);\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Auth service\r\nconst authService = {\r\n  login: async (email, password) => {\r\n    return apiRequest('/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n  },\r\n  \r\n  register: async (email, password, name) => {\r\n    return apiRequest('/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password, name })\r\n    });\r\n  },\r\n  \r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('admin');\r\n  },\r\n  \r\n  getToken: () => localStorage.getItem('token'),\r\n  \r\n  getAdmin: () => {\r\n    const admin = localStorage.getItem('admin');\r\n    return admin ? JSON.parse(admin) : null;\r\n  },\r\n  \r\n  setAuth: (token, admin) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('admin', JSON.stringify(admin));\r\n  }\r\n};\r\n\r\n// Test service\r\nconst testService = {\r\n  getAll: async () => {\r\n    const response = await apiRequest('/tests');\r\n    return response.tests;\r\n  },\r\n  \r\n  create: async (title, description) => {\r\n    return apiRequest('/tests', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ title, description })\r\n    });\r\n  },\r\n  \r\n  addQuestion: async (testId, questionData) => {\r\n    return apiRequest(`/tests/${testId}/questions`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(questionData)\r\n    });\r\n  },\r\n  \r\n  deleteQuestion: async (testId, questionId) => {\r\n    return apiRequest(`/tests/${testId}/questions/${questionId}`, {\r\n      method: 'DELETE'\r\n    });\r\n  },\r\n  \r\n  uploadCSV: async (testId, file) => {\r\n    const formData = new FormData();\r\n    formData.append('csvFile', file);\r\n    \r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${API_BASE_URL}/tests/${testId}/upload-csv`, {\r\n      method: 'POST',\r\n      headers: {\r\n        ...(token && { 'Authorization': `Bearer ${token}` })\r\n      },\r\n      body: formData\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({ message: 'Upload failed' }));\r\n      throw new Error(errorData.message || `HTTP ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n  },\r\n  \r\n  delete: async (testId) => {\r\n    return apiRequest(`/tests/${testId}`, {\r\n      method: 'DELETE'\r\n    });\r\n  }\r\n};\r\n\r\n// Login Component\r\nconst Login = ({ onLogin }) => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      let result;\r\n      if (isRegistering) {\r\n        result = await authService.register(formData.email, formData.password, name);\r\n      } else {\r\n        result = await authService.login(formData.email, formData.password);\r\n      }\r\n\r\n      authService.setAuth(result.token, result.admin);\r\n      onLogin(result.admin);\r\n    } catch (error) {\r\n      setError(error.message || 'Authentication failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <div className=\"login-header\">\r\n          <h1 className=\"login-title\">\r\n            Test Management System\r\n          </h1>\r\n          <p className=\"login-subtitle\">\r\n            {isRegistering ? 'Create Admin Account' : 'Admin Login'}\r\n          </p>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          {isRegistering && (\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">\r\n                Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                className=\"form-input\"\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n              className=\"form-input\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              value={formData.password}\r\n              onChange={(e) => setFormData({...formData, password: e.target.value})}\r\n              className=\"form-input\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className={`login-button ${loading ? 'loading' : ''}`}\r\n          >\r\n            {loading ? 'Processing...' : (isRegistering ? 'Register' : 'Login')}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"login-toggle\">\r\n          <button\r\n            onClick={() => setIsRegistering(!isRegistering)}\r\n            className=\"toggle-button\"\r\n          >\r\n            {isRegistering ? 'Already have an account? Login' : 'Need an account? Register'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Create Test Modal\r\nconst CreateTestModal = ({ isOpen, onClose, onSubmit }) => {\r\n  const [formData, setFormData] = useState({ title: '', description: '' });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n    setFormData({ title: '', description: '' });\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2 className=\"modal-title\">Create New Test</h2>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Test Title *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.title}\r\n              onChange={(e) => setFormData({...formData, title: e.target.value})}\r\n              className=\"form-input\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Description (Optional)\r\n            </label>\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n              className=\"form-textarea\"\r\n              rows=\"3\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"modal-buttons\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Create Test\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Add Question Modal\r\nconst AddQuestionModal = ({ isOpen, onClose, onSubmit }) => {\r\n  const [formData, setFormData] = useState({\r\n    questionText: '',\r\n    optionA: '',\r\n    optionB: '',\r\n    optionC: '',\r\n    optionD: '',\r\n    correctAnswer: 'A'\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n    setFormData({\r\n      questionText: '',\r\n      optionA: '',\r\n      optionB: '',\r\n      optionC: '',\r\n      optionD: '',\r\n      correctAnswer: 'A'\r\n    });\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content large\">\r\n        <h2 className=\"modal-title\">Add Question</h2>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Question Text *\r\n            </label>\r\n            <textarea\r\n              value={formData.questionText}\r\n              onChange={(e) => setFormData({...formData, questionText: e.target.value})}\r\n              className=\"form-textarea\"\r\n              rows=\"3\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"options-grid\">\r\n            {['A', 'B', 'C', 'D'].map(option => (\r\n              <div key={option} className=\"form-group\">\r\n                <label className=\"form-label\">\r\n                  Option {option} *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData[`option${option}`]}\r\n                  onChange={(e) => setFormData({...formData, [`option${option}`]: e.target.value})}\r\n                  className=\"form-input\"\r\n                  required\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Correct Answer *\r\n            </label>\r\n            <select\r\n              value={formData.correctAnswer}\r\n              onChange={(e) => setFormData({...formData, correctAnswer: e.target.value})}\r\n              className=\"form-select\"\r\n            >\r\n              <option value=\"A\">A</option>\r\n              <option value=\"B\">B</option>\r\n              <option value=\"C\">C</option>\r\n              <option value=\"D\">D</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"modal-buttons\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-success\"\r\n            >\r\n              Add Question\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// CSV Upload Modal\r\nconst CSVUploadModal = ({ isOpen, onClose, onUpload, testId }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) return;\r\n    \r\n    setUploading(true);\r\n    try {\r\n      await onUpload(testId, file);\r\n      setFile(null);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2 className=\"modal-title\">Upload Questions CSV</h2>\r\n        \r\n        <div className=\"csv-format-info\">\r\n          <h3 className=\"info-title\">CSV Format:</h3>\r\n          <p className=\"info-text\">\r\n            questionText,option1,option2,option3,option4,correctAnswer\r\n          </p>\r\n          <p className=\"info-example\">\r\n            Example: \"What is 2+2?,1,2,3,4,4\"\r\n          </p>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"modal-form\">\r\n          <div className=\"form-group\">\r\n            <label className=\"form-label\">\r\n              Select CSV File\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv\"\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n              className=\"form-file\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"modal-buttons\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!file || uploading}\r\n              className={`btn btn-primary ${(!file || uploading) ? 'disabled' : ''}`}\r\n            >\r\n              {uploading ? 'Uploading...' : 'Upload'}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Test Item Component\r\nconst TestItem = ({ test, onAddQuestion, onUploadCSV, onDeleteQuestion, onDeleteTest }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  return (\r\n    <div className=\"test-item\">\r\n      <div \r\n        className=\"test-header\"\r\n        onClick={() => setIsExpanded(!isExpanded)}\r\n      >\r\n        <div className=\"test-info\">\r\n          <h3 className=\"test-title\">{test.title}</h3>\r\n          {test.description && (\r\n            <p className=\"test-description\">{test.description}</p>\r\n          )}\r\n          <p className=\"test-meta\">\r\n            {test.questions.length} questions\r\n          </p>\r\n        </div>\r\n        <div className=\"test-actions\">\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onAddQuestion(test._id);\r\n            }}\r\n            className=\"btn btn-success small\"\r\n          >\r\n            Add Question\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onUploadCSV(test._id);\r\n            }}\r\n            className=\"btn btn-primary small\"\r\n          >\r\n            Upload CSV\r\n          </button>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              if (window.confirm('Are you sure you want to delete this test?')) {\r\n                onDeleteTest(test._id);\r\n              }\r\n            }}\r\n            className=\"btn btn-danger small\"\r\n          >\r\n            Delete\r\n          </button>\r\n          <span className={`expand-icon ${isExpanded ? 'expanded' : ''}`}>\r\n            ▼\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      {isExpanded && (\r\n        <div className=\"test-questions\">\r\n          <div className=\"questions-container\">\r\n            <h4 className=\"questions-title\">Questions:</h4>\r\n            {test.questions.length === 0 ? (\r\n              <p className=\"no-questions\">No questions added yet.</p>\r\n            ) : (\r\n              <div className=\"questions-list\">\r\n                {test.questions.map((question, index) => (\r\n                  <div key={question._id} className=\"question-item\">\r\n                    <div className=\"question-content\">\r\n                      <div className=\"question-text-container\">\r\n                        <p className=\"question-text\">\r\n                          {index + 1}. {question.questionText}\r\n                        </p>\r\n                        <div className=\"options-container\">\r\n                          {Object.entries(question.options).map(([key, value]) => (\r\n                            <div\r\n                              key={key}\r\n                              className={`option ${\r\n                                question.correctAnswer === key \r\n                                  ? 'correct' \r\n                                  : ''\r\n                              }`}\r\n                            >\r\n                              {key}. {value}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                        <p className=\"correct-answer\">\r\n                          Correct Answer: {question.correctAnswer}\r\n                        </p>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => {\r\n                          if (window.confirm('Are you sure you want to delete this question?')) {\r\n                            onDeleteQuestion(test._id, question._id);\r\n                          }\r\n                        }}\r\n                        className=\"btn btn-danger small\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main Dashboard Component\r\nconst Dashboard = ({ admin, onLogout }) => {\r\n  const [tests, setTests] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  \r\n  // Modal states\r\n  const [showCreateTest, setShowCreateTest] = useState(false);\r\n  const [showAddQuestion, setShowAddQuestion] = useState(false);\r\n  const [showCSVUpload, setShowCSVUpload] = useState(false);\r\n  const [selectedTestId, setSelectedTestId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadTests();\r\n  }, []);\r\n\r\n  const loadTests = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const testsData = await testService.getAll();\r\n      setTests(testsData);\r\n    } catch (error) {\r\n      setError('Failed to load tests: ' + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const showMessage = (message, type = 'success') => {\r\n    if (type === 'success') {\r\n      setSuccess(message);\r\n      setError('');\r\n    } else {\r\n      setError(message);\r\n      setSuccess('');\r\n    }\r\n    setTimeout(() => {\r\n      setSuccess('');\r\n      setError('');\r\n    }, 5000);\r\n  };\r\n\r\n  const handleCreateTest = async (testData) => {\r\n    try {\r\n      await testService.create(testData.title, testData.description);\r\n      setShowCreateTest(false);\r\n      loadTests();\r\n      showMessage('Test created successfully!');\r\n    } catch (error) {\r\n      showMessage('Failed to create test: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleAddQuestion = async (questionData) => {\r\n    try {\r\n      await testService.addQuestion(selectedTestId, questionData);\r\n      setShowAddQuestion(false);\r\n      setSelectedTestId(null);\r\n      loadTests();\r\n      showMessage('Question added successfully!');\r\n    } catch (error) {\r\n      showMessage('Failed to add question: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeleteQuestion = async (testId, questionId) => {\r\n    try {\r\n      await testService.deleteQuestion(testId, questionId);\r\n      loadTests();\r\n      showMessage('Question deleted successfully!');\r\n    } catch (error) {\r\n      showMessage('Failed to delete question: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeleteTest = async (testId) => {\r\n    try {\r\n      await testService.delete(testId);\r\n      loadTests();\r\n      showMessage('Test deleted successfully!');\r\n    } catch (error) {\r\n      showMessage('Failed to delete test: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const handleCSVUpload = async (testId, file) => {\r\n    try {\r\n      const result = await testService.uploadCSV(testId, file);\r\n      setShowCSVUpload(false);\r\n      setSelectedTestId(null);\r\n      loadTests();\r\n      showMessage(result.message);\r\n    } catch (error) {\r\n      showMessage('Failed to upload CSV: ' + error.message, 'error');\r\n    }\r\n  };\r\n\r\n  const openAddQuestion = (testId) => {\r\n    setSelectedTestId(testId);\r\n    setShowAddQuestion(true);\r\n  };\r\n\r\n  const openCSVUpload = (testId) => {\r\n    setSelectedTestId(testId);\r\n    setShowCSVUpload(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Header */}\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"header-info\">\r\n            <h1 className=\"dashboard-title\">\r\n              Test Management System\r\n            </h1>\r\n            <p className=\"dashboard-subtitle\">Welcome back, {admin.name}</p>\r\n          </div>\r\n          <div className=\"header-actions\">\r\n            <button\r\n              onClick={() => setShowCreateTest(true)}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Create Test\r\n            </button>\r\n            <button\r\n              onClick={onLogout}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"dashboard-content\">\r\n        \r\n        {/* Messages */}\r\n        {success && (\r\n          <div className=\"message success\">\r\n            {success}\r\n          </div>\r\n        )}\r\n        \r\n        {error && (\r\n          <div className=\"message error\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Tests List */}\r\n        <div className=\"tests-section\">\r\n          <div className=\"section-header\">\r\n            <h2 className=\"section-title\">Your Tests</h2>\r\n            <p className=\"section-subtitle\">Manage your tests and questions</p>\r\n          </div>\r\n          \r\n          <div className=\"section-content\">\r\n            {loading ? (\r\n              <div className=\"loading-container\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <p className=\"loading-text\">Loading tests...</p>\r\n              </div>\r\n            ) : tests.length === 0 ? (\r\n              <div className=\"empty-state\">\r\n                <p className=\"empty-message\">No tests created yet.</p>\r\n                <button\r\n                  onClick={() => setShowCreateTest(true)}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Create Your First Test\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"tests-grid\">\r\n                {tests.map(test => (\r\n                  <TestItem\r\n                    key={test._id}\r\n                    test={test}\r\n                    onAddQuestion={openAddQuestion}\r\n                    onUploadCSV={openCSVUpload}\r\n                    onDeleteQuestion={handleDeleteQuestion}\r\n                    onDeleteTest={handleDeleteTest}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modals */}\r\n      <CreateTestModal\r\n        isOpen={showCreateTest}\r\n        onClose={() => setShowCreateTest(false)}\r\n        onSubmit={handleCreateTest}\r\n      />\r\n      \r\n      <AddQuestionModal\r\n        isOpen={showAddQuestion}\r\n        onClose={() => {\r\n          setShowAddQuestion(false);\r\n          setSelectedTestId(null);\r\n        }}\r\n        onSubmit={handleAddQuestion}\r\n      />\r\n      \r\n      <CSVUploadModal\r\n        isOpen={showCSVUpload}\r\n        onClose={() => {\r\n          setShowCSVUpload(false);\r\n          setSelectedTestId(null);\r\n        }}\r\n        onUpload={handleCSVUpload}\r\n        testId={selectedTestId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main App Component\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [admin, setAdmin] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = authService.getToken();\r\n    const savedAdmin = authService.getAdmin();\r\n    \r\n    if (token && savedAdmin) {\r\n      setIsAuthenticated(true);\r\n      setAdmin(savedAdmin);\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const handleLogin = (adminData) => {\r\n    setIsAuthenticated(true);\r\n    setAdmin(adminData);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    authService.logout();\r\n    setIsAuthenticated(false);\r\n    setAdmin(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"app-loading\">\r\n        <div className=\"loading-content\">\r\n          <div className=\"loading-spinner large\"></div>\r\n          <p className=\"loading-text\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {isAuthenticated ? (\r\n        <Dashboard admin={admin} onLogout={handleLogout} />\r\n      ) : (\r\n        <Login onLogin={handleLogin} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}